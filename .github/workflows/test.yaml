name: Test

on:
  push:
  pull_request:

jobs:
  test:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - db: "mariadb:10.2"
            py: "3.9"
          - db: "mariadb:10.3"
            py: "3.8"
          - db: "mariadb:10.5"
            py: "3.7"
          - db: "mysql:5.6"
            py: "3.6"
          - db: "mysql:5.7"
            py: "pypy-3.6"
          - db: "mysql:8.0"
            py: "3.9"

    services:
      mysql:
        image: "${{ matrix.db }}"
        ports:
          - 3306:3306
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
        options: "--name=mysqld"

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.py }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.py }}
      - name: Set up MySQL
        run: |
          sleep 10
          mysql -h 127.0.0.1 -uroot -e "select version()"
          mysql -h 127.0.0.1 -uroot -e "SET GLOBAL local_infile=on"
          mysql -h 127.0.0.1 -uroot -e 'create database test1 DEFAULT CHARACTER SET utf8mb4'
          mysql -h 127.0.0.1 -uroot -e 'create database test2 DEFAULT CHARACTER SET utf8mb4'
          mysql -h 127.0.0.1 -uroot -e "create user test2           identified ${WITH_PLUGIN} by 'some password'; grant all on test2.* to test2;"
          mysql -h 127.0.0.1 -uroot -e "create user test2@localhost identified ${WITH_PLUGIN} by 'some password'; grant all on test2.* to test2@localhost;"
          cp .travis/docker.json pymysql/tests/databases.json
      - name: Run test
        run: |
          pip install -U cryptography PyNaCl pytest pytest-cov mock coveralls
          pytest -v --cov --cov-config .coveragerc pymysql
      - name: Report coverage
        run: coveralls
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_FLAG_NAME: ${{ matrix.test-name }}
          COVERALLS_PARALLEL: true

  coveralls:
    name: Finish coveralls
    runs-on: ubuntu-20.04
    needs: test
    container: python:3-slim
    steps:
    - name: Finished
      run: |
        pip3 install --upgrade coveralls
        coveralls --finish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
